plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.inovola.expense_tracker_lite"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = 17
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def appName = "expense_tracker_lite"
            def newName = "${appName}_v${variant.versionName}+${variant.versionCode}_${variant.buildType.name}.apk"
            if (output.outputFileName.endsWith('.apk')) {
                output.outputFileName = newName
            }
        }
    }


    defaultConfig {
        applicationId = "com.inovola.expense_tracker_lite"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        versionName getFlutterVersionName()
        versionCode getFlutterBuildNumber().toInteger()

    }

    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }


}

flutter {
    source = "../.."
}

def getFlutterVersionName() {
    def pubspec = new File(rootProject.projectDir, "../pubspec.yaml")
    def versionLine = pubspec.readLines().find { it.startsWith("version:") }
    if (versionLine != null) {
        def version = versionLine.replace("version:", "").trim()
        return version.split("\\+")[0] // رقم الفيرجن
    }
    return "0.0.0"
}

def getFlutterBuildNumber() {
    def pubspec = new File(rootProject.projectDir, "../pubspec.yaml")
    def versionLine = pubspec.readLines().find { it.startsWith("version:") }
    if (versionLine != null) {
        def version = versionLine.replace("version:", "").trim()
        return version.split("\\+")[1] // رقم البناء
    }
    return "1"
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}
